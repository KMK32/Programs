#include <stdio.h>
#include <stdlib.h>
#include <string.h>


struct Node {
    int data;
    struct Node* next;
};

typedef struct Node Node;


Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    if (newNode == NULL) {
        printf("Memory allocation failed\n");
        exit(1);
    }
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}


void append(Node** head, int data) {
    Node* newNode = createNode(data);
    if (*head == NULL) {
        *head = newNode;
    } else {
        Node* current = *head;
        while (current->next != NULL) {
            current = current->next;
        }
        current->next = newNode;
    }
}


Node* reverseList(Node* head) {
    Node* prev = NULL;
    Node* current = head;
    Node* next = NULL;

    while (current != NULL) {
        next = current->next;
        current->next = prev;
        prev = current;
        current = next;
    }

    return prev;
}


Node* addLists(Node* list1, Node* list2) {
    Node* result = NULL;
    int carry = 0;

    while (list1 != NULL || list2 != NULL) {
        int sum = carry;

        if (list1 != NULL) {
            sum += list1->data;
            list1 = list1->next;
        }

        if (list2 != NULL) {
            sum += list2->data;
            list2 = list2->next;
        }

        carry = sum / 10;
        append(&result, sum % 10);
    }

    if (carry > 0) {
        append(&result, carry);
    }

    return result;
}


void printList(Node* head) {
    Node* current = head;
    while (current != NULL) {
        printf("%d", current->data);
        current = current->next;
    }
    printf("\n");
}

int main() {
    char num1Str[1000];
    char num2Str[1000];

    printf("Enter the first very long number: ");
    scanf("%s", num1Str);

    printf("Enter the second very long number: ");
    scanf("%s", num2Str);

    int len1 = strlen(num1Str);
    int len2 = strlen(num2Str);

    Node* num1 = NULL;
    Node* num2 = NULL;

    for (int i = len1 - 1; i >= 0; i--) {
        append(&num1, num1Str[i] - '0');
    }

    for (int i = len2 - 1; i >= 0; i--) {
        append(&num2, num2Str[i] - '0');
    }

   
    Node* sum = addLists(num1, num2);

  
    sum = reverseList(sum);

    
    printf("Sum: ");
    printList(sum);


    while (num1 != NULL) {
        Node* temp = num1;
        num1 = num1->next;
        free(temp);
    }

    while (num2 != NULL) {
        Node* temp = num2;
        num2 = num2->next;
        free(temp);
    }

    while (sum != NULL) {
        Node* temp = sum;
        sum = sum->next;
        free(temp);
    }

return 0;
}